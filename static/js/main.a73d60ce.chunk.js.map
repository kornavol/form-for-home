{"version":3,"sources":["pages/TenantsWizzard/style.ts","components/tenantsForm/TenantsFormControls.ts","components/tenantsForm/style.ts","components/tenantsForm/Salary.tsx","components/tenantsForm/Contact.tsx","components/tenantsForm/Summary.tsx","pages/TenantsWizzard/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ColorlibConnector","withStyles","opacity","transform","alternativeLabel","top","active","backgroundColor","animation","completed","line","height","border","borderRadius","StepConnector","useColorlibStepIconStyles","makeStyles","root","zIndex","color","width","display","justifyContent","alignItems","to","boxShadow","useStyles","theme","flexDirection","maxWidth","minHeight","marginTop","marginBottom","marginLeft","marginRight","paddingTop","paddingBottom","breakpoints","down","margin","instructions","spacing","fontFamily","textAlign","padding","wBody","BackButton","background","Button","FButton","PostContactForm","values","successCallback","errorCallback","a","initialFormValues","firstName","lastName","phone","email","salary","formSubmitted","success","useFormControls","useState","setValues","errors","setErrors","handleSuccess","handleError","formIsValid","fieldValues","isValid","Object","every","x","handleInputValue","e","target","name","value","temp","test","validate","handleFormSubmit","SalaryStyles","fontSize","GreenRadio","checked","Radio","SummaryStyles","title","fontWeight","Salary","classes","noValidate","autoComplete","className","RadioGroup","aria-label","onChange","map","FormControlLabel","control","label","form","matches","useMediaQuery","inputFieldNames","id","inputFieldCont","Box","flexWrap","input","TextField","onBlur","error","helperText","variant","style","fullWidth","Summary","tenantsForm","ColorlibStepIcon","props","icons","1","2","3","clsx","String","icon","Wizard","activeStep","setActiveStep","steps","handleNext","prevActiveStep","data-aos","data-aos-duration","Stepper","connector","overflow","position","Step","StepLabel","StepIconComponent","length","onClick","step","Contact","CurrentForm","disabled","AOS","init","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a73d60ce.chunk.js","sourcesContent":["import { makeStyles, withStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { StepConnector, Button } from \"@material-ui/core\";\r\nimport { ImportantDevices } from \"@material-ui/icons\";\r\n\r\nexport const ColorlibConnector = withStyles({\r\n    \"@keyframes fadeIn\": {\r\n        \"0%\": {\r\n            opacity: 0,\r\n            transform: \"translateX(-100%)\",\r\n        },\r\n        \"100%\": {\r\n            opacity: 1,\r\n            transform: \"translateX(0%)\",\r\n        },\r\n    },\r\n    alternativeLabel: {\r\n        top: 22,\r\n    },\r\n    active: {\r\n        \"& $line\": {\r\n            backgroundColor: \"#6d7f52\",\r\n            animation: \"$fadeIn 0.5s linear forwards\",\r\n        },\r\n    },\r\n    completed: {\r\n        \"& $line\": {\r\n            backgroundColor: \"#6d7f52\",\r\n        },\r\n    },\r\n    line: {\r\n        height: 3,\r\n        border: 0,\r\n        backgroundColor: \"#eaeaf0\",\r\n        borderRadius: 1,\r\n    },\r\n})(StepConnector);\r\n\r\nexport const useColorlibStepIconStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: \"#ccc\",\r\n        zIndex: 1,\r\n        color: \"#fff\",\r\n        width: 50,\r\n        height: 50,\r\n        display: \"flex\",\r\n        borderRadius: \"50%\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    \"@keyframes active\": {\r\n        to: {\r\n            backgroundColor: \"#d1dfbe\",\r\n        },\r\n    },\r\n    \"@keyframes completed\": {\r\n        to: {\r\n            backgroundColor: \"#6d7f52\",\r\n        },\r\n    },\r\n    active: {\r\n        boxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\",\r\n        animation: \"$active 1s linear forwards \",\r\n    },\r\n    completed: {\r\n        animation: \"$completed 1s linear forwards \",\r\n    },\r\n});\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n\r\n        backgroundColor: \"white\",\r\n        width: \"70vw\",\r\n\r\n        maxWidth: \"800px\",\r\n        minHeight: \"70vh\",\r\n\r\n        marginTop: \"3rem\",\r\n        marginBottom: \"1rem\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        paddingTop: \"2rem\",\r\n        paddingBottom: \"2rem\",\r\n\r\n        boxShadow: \"1px 1px 11px 2px rgba(0,0,0,0.44)\",\r\n\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: '100%',\r\n            height:'100%',\r\n            margin: 'auto !Important',\r\n            boxShadow: \"none\",\r\n            maxWidth: \"none\",\r\n            // minHeight: \"100%\",\r\n        },\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(2),\r\n        fontFamily: \"muli-semibold\",\r\n        color: \"#6d7f52\",\r\n        textAlign: \"center\",\r\n        padding: theme.spacing(1),\r\n    },\r\n    wBody: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        padding: \"24px\",\r\n    },\r\n}));\r\n\r\nexport const BackButton = withStyles((theme: Theme) => ({\r\n    root: {\r\n        marginRight: theme.spacing(3),\r\n        background: \"#e9e0cf\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#d0c9be\",\r\n        },\r\n    },\r\n}))(Button);\r\n\r\nexport const FButton = withStyles((theme: Theme) => ({\r\n    root: {\r\n        marginRight: theme.spacing(3),\r\n        background: \"#6d7f52\",\r\n        color: \"#fff\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#3a722c\",\r\n        },\r\n    },\r\n}))(Button);\r\n","import React, { useState } from \"react\";\r\n\r\nconst PostContactForm = async (\r\n    values: ITenantsForm,\r\n    successCallback: any,\r\n    errorCallback: any\r\n) => {\r\n    // do stuff\r\n    // if successful\r\n    if (true) successCallback();\r\n    else errorCallback();\r\n};\r\n\r\ninterface ITenantsForm {\r\n    firstName: string;\r\n    lastName: string;\r\n    phone: number | string;\r\n    email: string;\r\n    salary: string;\r\n    formSubmitted?: boolean;\r\n    success?: boolean;\r\n}\r\n\r\nconst initialFormValues = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    salary: \"0 - 1.000\",\r\n    formSubmitted: false,\r\n    success: false,\r\n};\r\n\r\nexport const useFormControls = () => {\r\n    interface IErrors {\r\n        firstName?: string;\r\n        lastName?: string;\r\n        phone?: any;\r\n        email?: string;\r\n        salary?: string;\r\n    }\r\n    const [values, setValues] = useState<ITenantsForm>(initialFormValues);\r\n    const [errors, setErrors] = useState({} as IErrors);\r\n\r\n    const validate = (fieldValues: IErrors = values) => {\r\n        let temp: IErrors = { ...errors };\r\n\r\n        if (\"firstName\" in fieldValues)\r\n            temp.firstName = fieldValues.firstName ? \"\" : \"This field is required.\";\r\n\r\n        if (\"lastName\" in fieldValues)\r\n            temp.lastName = fieldValues.lastName ? \"\" : \"This field is required.\";\r\n\r\n        if (\"email\" in fieldValues) {\r\n            temp.email = fieldValues.email ? \"\" : \"This field is required.\";\r\n            if (fieldValues.email)\r\n                temp.email = /^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$/.test(fieldValues.email)\r\n                    ? \"\"\r\n                    : \"Email is not valid.\";\r\n        }\r\n\r\n        if (\"phone\" in fieldValues) {\r\n            temp.phone = fieldValues.phone ? \"\" : \"This field is required.\";\r\n            if (fieldValues.phone)\r\n                temp.phone = /^\\d{12}$/.test(fieldValues.phone)\r\n                    ? \"\"\r\n                    : \"Phone is not valid.\";\r\n        }\r\n\r\n        setErrors({\r\n            ...temp,\r\n        });\r\n    };\r\n\r\n    const handleInputValue = (\r\n        e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n    ) => {\r\n        const { name, value } = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]: value,\r\n        });\r\n        validate({ [name]: value });\r\n    };\r\n\r\n    const handleSuccess = () => {\r\n        setValues({\r\n            ...initialFormValues,\r\n            formSubmitted: true,\r\n            success: true,\r\n        });\r\n    };\r\n\r\n    const handleError = () => {\r\n        setValues({\r\n            ...initialFormValues,\r\n            formSubmitted: true,\r\n            success: false,\r\n        });\r\n    };\r\n\r\n    const formIsValid = (fieldValues = values) => {\r\n        const isValid =\r\n            fieldValues.firstName &&\r\n            fieldValues.lastName &&\r\n            fieldValues.email &&\r\n            Object.values(errors).every((x) => x === \"\");\r\n\r\n        return isValid;\r\n    };\r\n\r\n    const handleFormSubmit = async () => {\r\n        const isValid =\r\n            Object.values(errors).every((x) => x === \"\") && formIsValid();\r\n        if (isValid) {\r\n            await PostContactForm(values, handleSuccess, handleError);\r\n        }\r\n    };\r\n\r\n    return {\r\n        values,\r\n        errors,\r\n        handleInputValue,\r\n        handleFormSubmit,\r\n        formIsValid,\r\n    };\r\n};\r\n","import { makeStyles, withStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { Styles } from \"@material-ui/styles\";\r\n\r\nimport { Radio } from \"@material-ui/core\";\r\n\r\n/* Contact.tsx */\r\nexport const styles: Styles<Theme, {}, string> = (theme: Theme) => ({\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginTop: \"1rem\",\r\n    marginBottom: \"1rem\",\r\n  },\r\n});\r\n\r\n/* Salary.tsx */\r\nexport const SalaryStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(2),\r\n    fontFamily: \"muli-semibold\",\r\n    fontSize: \"20px\",\r\n    color: \"#6d7f52\",\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nexport const GreenRadio = withStyles({\r\n  root: {\r\n    color: \"#6d7f52\",\r\n    \"&$checked\": {\r\n      color: \"#3a722c\",\r\n    },\r\n  },\r\n  checked: {},\r\n})(Radio);\r\n\r\n/* Summary.tsx  */\r\nexport const SummaryStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(2),\r\n    fontFamily: \"muli-semibold\",\r\n    fontSize: \"20px\",\r\n    color: \"#6d7f52\",\r\n    textAlign: \"center\",\r\n  },\r\n  title: {\r\n    fontFamily: \"poppins-medium\",\r\n    fontWeight: 600,\r\n    marginRight: \"5px\",\r\n  },\r\n}));\r\n","import React, { FC } from \"react\";\r\n\r\nimport { RadioGroup, FormControlLabel } from \"@material-ui/core\";\r\nimport { SalaryStyles, GreenRadio } from \"./style\";\r\n\r\ninterface ITenantsForm {\r\n    firstName: string;\r\n    lastName: string;\r\n    phone: number | string;\r\n    email: string;\r\n    salary: string;\r\n    formSubmitted?: boolean;\r\n    success?: boolean;\r\n}\r\n\r\ninterface IProps {\r\n    values: ITenantsForm;\r\n    handleInputValue(\r\n        e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n    ): void;\r\n    classes?: any;\r\n}\r\n\r\nconst Salary: FC<IProps> = ({ values, handleInputValue }) => {\r\n    const classes = SalaryStyles();\r\n\r\n    const range: string[] = [\r\n        \"0 - 1.000\",\r\n        \"1.000 - 2.000\",\r\n        \"2.000 - 3.000\",\r\n        \"3.000 - 4.000\",\r\n        \"Mehr als 4.000\",\r\n    ];\r\n\r\n    return (\r\n        <form noValidate autoComplete=\"off\">\r\n            <h3 className={classes.root}>Indicate your salary</h3>\r\n            <RadioGroup\r\n                aria-label=\"salary\"\r\n                name=\"salary\"\r\n                value={values.salary}\r\n                onChange={handleInputValue}\r\n            >\r\n                {range.map((salary: string) => (\r\n                    <FormControlLabel\r\n                        key={salary}\r\n                        value={salary}\r\n                        control={<GreenRadio />}\r\n                        label={salary}\r\n                    />\r\n                ))}\r\n            </RadioGroup>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Salary;\r\n","import React from \"react\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Box, TextField, useMediaQuery } from \"@material-ui/core\";\r\n\r\nimport {styles} from './style';\r\n\r\ninterface ITenantsForm {\r\n    firstName: string \r\n    lastName: string\r\n    phone: number | string\r\n    email: string\r\n    salary: string\r\n}\r\n\r\ninterface IProps {\r\n    values: ITenantsForm;\r\n    handleInputValue(e : React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>): void;\r\n    errors: any\r\n    classes?: any;\r\n}\r\n\r\nconst ContactData: React.FC<IProps> = ({ values, handleInputValue, errors }) => {\r\n\r\n    /* add media query */\r\n    const matches = useMediaQuery('(max-width:750px)');\r\n\r\n    const inputFieldNames : Array<{[key: string] : string}> = [\r\n        {\r\n            name: \"firstName\",\r\n            label: \"Full Name\",\r\n            id: \"t-w-firstName\",\r\n            value: values.firstName\r\n        },\r\n        {\r\n            name: \"lastName\",\r\n            label: \"Last Name\",\r\n            id: \"t-w-lastName\",\r\n            value: values.lastName\r\n        },\r\n    ];\r\n\r\n    interface IFieldInput {\r\n        name: string, \r\n        id: string, \r\n        label : string, \r\n        value:any\r\n    }\r\n\r\n    const inputFieldCont : Array<IFieldInput> = [\r\n        {\r\n            name: \"email\",\r\n            label: \"Email\",\r\n            id: \"t-w-email\",\r\n            value: values.email\r\n        },\r\n        {\r\n            name: \"phone\",\r\n            label: \"Phone\",\r\n            id: \"t-w-phone\",\r\n            value: values.phone\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <form noValidate autoComplete=\"off\">\r\n\r\n            <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\" justifyContent=\"space-between\">\r\n                {inputFieldNames.map((input: {[key: string] : string}) => {\r\n                    return (\r\n                        <TextField\r\n                            key={input.id}\r\n                            id={input.id}\r\n                            label={input.label}\r\n                            name={input.name}\r\n                            value={input.value}\r\n\r\n                            onChange={handleInputValue}\r\n                            onBlur={handleInputValue}\r\n\r\n                            error={!!errors[input.name]}\r\n                            {...(errors[input.name] && {\r\n                                error: true,\r\n                                helperText: errors[input.name]\r\n                            })}\r\n\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            style={matches ? { width: \"100%\" } : { width: \"45%\" }}\r\n                        />\r\n                    );\r\n                })}\r\n            </Box>\r\n\r\n            {inputFieldCont.map((input: IFieldInput) => {\r\n                return (\r\n                    <TextField\r\n                        key={input.id}\r\n                        id={input.id}\r\n                        label={input.label}\r\n                        name={input.name}\r\n                        value={input.value}\r\n\r\n                        onChange={handleInputValue}\r\n                        onBlur={handleInputValue}\r\n\r\n                        error={!!errors[input.name]}\r\n                        {...(errors[input.name] && {\r\n                            error: true,\r\n                            helperText: errors[input.name]\r\n                        })}\r\n\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                    />\r\n                );\r\n            })}\r\n        </form>\r\n    );\r\n};\r\n\r\n/* in general add oportunity to use class as property of material ui component */\r\nexport default withStyles(styles)(ContactData);","import React, { FC } from \"react\";\r\n\r\nimport { SummaryStyles } from \"./style\";\r\n\r\ninterface ITenantsForm {\r\n    firstName: string;\r\n    lastName: string;\r\n    phone: number | string;\r\n    email: string;\r\n    salary: string;\r\n    formSubmitted?: boolean;\r\n    success?: boolean;\r\n}\r\n\r\ninterface IProps {\r\n    tenantsForm: ITenantsForm;\r\n    classes?: any;\r\n}\r\n\r\nconst Summary: FC<IProps> = ({ tenantsForm }) => {\r\n    const classes = SummaryStyles();\r\n\r\n    return (\r\n        <div id=\"w-t-summary\">\r\n            <h3 className={classes.root}>Please check your information</h3>\r\n            <p>\r\n                <span className={classes.title}>First name:</span>{\" \"}\r\n                {tenantsForm.firstName}\r\n            </p>\r\n            <p>\r\n                <span className={classes.title}>Last name:</span> {tenantsForm.lastName}\r\n            </p>\r\n            <p>\r\n                <span className={classes.title}>Email:</span> {tenantsForm.email}\r\n            </p>\r\n            <p>\r\n                <span className={classes.title}>Phone:</span> {tenantsForm.phone}\r\n            </p>\r\n            <p>\r\n                <span className={classes.title}>Salary: </span> {tenantsForm.salary}\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Summary;\r\n","import React, { FC, useState } from \"react\";\r\n\r\nimport clsx from \"clsx\";\r\nimport {\r\n    ColorlibConnector,\r\n    useColorlibStepIconStyles,\r\n    useStyles,\r\n    BackButton,\r\n    FButton,\r\n} from \"./style\";\r\nimport { Box, Step, Stepper, StepLabel, Button } from \"@material-ui/core\";\r\n\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport EuroIcon from \"@material-ui/icons/Euro\";\r\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\r\n\r\nimport { useFormControls } from \"../../components/tenantsForm/TenantsFormControls\";\r\nimport Salary from \"../../components/tenantsForm/Salary\";\r\nimport ContactData from \"../../components/tenantsForm/Contact\";\r\nimport Summary from \"../../components/tenantsForm/Summary\";\r\n\r\ninterface ColorStepIcons {\r\n    active: boolean;\r\n    completed: boolean;\r\n    error: boolean;\r\n    icon: number;\r\n}\r\n\r\nfunction ColorlibStepIcon(props: ColorStepIcons) {\r\n    const classes = useColorlibStepIconStyles();\r\n    const { active, completed } = props;\r\n\r\n    const icons: any = {\r\n        1: <ListAltIcon />,\r\n        2: <EuroIcon />,\r\n        3: <PlaylistAddCheckIcon />,\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={clsx(classes.root, {\r\n                [classes.active]: active,\r\n                [classes.completed]: completed,\r\n            })}\r\n        >\r\n            {icons[String(props.icon)]}\r\n        </div>\r\n    );\r\n}\r\n\r\n/* MAIN COMP. */\r\nconst Wizard: FC = () => {\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = useState<number>(0);\r\n\r\n    const { values, errors, handleInputValue, handleFormSubmit, formIsValid } =\r\n        useFormControls();\r\n\r\n    const steps: string[] = [\"Contact\", \"Salary\", \"Summary\"];\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n    };\r\n\r\n    const submitForm = () => {\r\n        handleFormSubmit();\r\n        handleNext();\r\n    };\r\n\r\n    const CurrentForm = (step: number) => {\r\n        switch (step) {\r\n            case 0:\r\n                return (\r\n                    <div key={activeStep} data-aos=\"fade-in\" data-aos-duration=\"1500\">\r\n                        <ContactData\r\n                            values={values}\r\n                            handleInputValue={handleInputValue}\r\n                            errors={errors}\r\n                        />\r\n                    </div>\r\n                );\r\n            case 1:\r\n                return (\r\n                    <div key={activeStep} data-aos=\"fade-in\" data-aos-duration=\"1500\">\r\n                        <Salary values={values} handleInputValue={handleInputValue} />\r\n                    </div>\r\n                );\r\n            case 2:\r\n                return (\r\n                    <div key={activeStep} data-aos=\"fade-in\" data-aos-duration=\"1500\">\r\n                        <Summary tenantsForm={values} />\r\n                    </div>\r\n                );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            id=\"tenant-wizzard\"\r\n            className={classes.root}\r\n            data-aos=\"fade-in\"\r\n            data-aos-duration=\"1000\"\r\n        >\r\n            <Stepper\r\n                alternativeLabel\r\n                activeStep={activeStep}\r\n                connector={<ColorlibConnector style={{ overflow: \"hidden\" }} />}\r\n                style={{ width: \"70%\", position: \"static\" }}\r\n            >\r\n                {steps.map((label) => (\r\n                    <Step key={label}>\r\n                        <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n                    </Step>\r\n                ))}\r\n            </Stepper>\r\n            {activeStep === steps.length ? (\r\n                <>\r\n                    <h2 className={classes.instructions}>\r\n                        All steps completed - you&apos;re finished\r\n                    </h2>\r\n                    <Button onClick={handleReset} variant=\"contained\" color=\"secondary\">\r\n                        Reset\r\n                    </Button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <div id=\"wizzard-body\" className={classes.wBody}>\r\n                        {CurrentForm(activeStep)}\r\n                    </div>\r\n                    <Box id=\"wiz-btns\" display=\"flex\" justifyContent=\"center\">\r\n                        {activeStep === 0 ? null : (\r\n                            <BackButton onClick={handleBack}>Back</BackButton>\r\n                        )}\r\n                        <FButton\r\n                            variant=\"contained\"\r\n                            disabled={!formIsValid()}\r\n                            onClick={\r\n                                activeStep === steps.length - 1 ? submitForm : handleNext\r\n                            }\r\n                        >\r\n                            {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\r\n                        </FButton>\r\n                    </Box>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Wizard;\r\n","import { FC } from \"react\";\nimport \"./App.css\";\n\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\n\nimport Wizard from \"./pages/TenantsWizzard\";\nAOS.init();\n\nconst App: FC = () => {\n  return (\n    <div className=\"wrapper\">\n      <Wizard />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}